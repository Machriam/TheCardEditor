// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TheCardEditor.DataModel.DataModel;

#nullable disable

namespace TheCardEditor.DataModel.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231123144958_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("TheCardEditor.DataModel.DataModel.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CardSetFk")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CardSetFk" }, "IX_Card_CardSetFk");

                    b.ToTable("Card", (string)null);
                });

            modelBuilder.Entity("TheCardEditor.DataModel.DataModel.CardSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("GameFk")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Height")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Width")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "GameFk" }, "IX_CardSet_GameFk");

                    b.ToTable("CardSet", (string)null);
                });

            modelBuilder.Entity("TheCardEditor.DataModel.DataModel.Font", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Base64Data")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue("Unnamed Font");

                    b.HasKey("Id");

                    b.ToTable("Font", (string)null);
                });

            modelBuilder.Entity("TheCardEditor.DataModel.DataModel.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Name" }, "IX_Game_Name")
                        .IsUnique();

                    b.ToTable("Game", (string)null);
                });

            modelBuilder.Entity("TheCardEditor.DataModel.DataModel.Picture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Picture", (string)null);
                });

            modelBuilder.Entity("TheCardEditor.DataModel.DataModel.Template", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CardSetFk")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CardSetFk" }, "IX_Template_CardSetFk");

                    b.HasIndex(new[] { "Name" }, "IX_Template_Name")
                        .IsUnique();

                    b.ToTable("Template", (string)null);
                });

            modelBuilder.Entity("TheCardEditor.DataModel.DataModel.Card", b =>
                {
                    b.HasOne("TheCardEditor.DataModel.DataModel.CardSet", "CardSetFkNavigation")
                        .WithMany("Cards")
                        .HasForeignKey("CardSetFk")
                        .IsRequired();

                    b.Navigation("CardSetFkNavigation");
                });

            modelBuilder.Entity("TheCardEditor.DataModel.DataModel.CardSet", b =>
                {
                    b.HasOne("TheCardEditor.DataModel.DataModel.Game", "GameFkNavigation")
                        .WithMany("CardSets")
                        .HasForeignKey("GameFk")
                        .IsRequired();

                    b.Navigation("GameFkNavigation");
                });

            modelBuilder.Entity("TheCardEditor.DataModel.DataModel.Template", b =>
                {
                    b.HasOne("TheCardEditor.DataModel.DataModel.CardSet", "CardSetFkNavigation")
                        .WithMany("Templates")
                        .HasForeignKey("CardSetFk")
                        .IsRequired();

                    b.Navigation("CardSetFkNavigation");
                });

            modelBuilder.Entity("TheCardEditor.DataModel.DataModel.CardSet", b =>
                {
                    b.Navigation("Cards");

                    b.Navigation("Templates");
                });

            modelBuilder.Entity("TheCardEditor.DataModel.DataModel.Game", b =>
                {
                    b.Navigation("CardSets");
                });
#pragma warning restore 612, 618
        }
    }
}
