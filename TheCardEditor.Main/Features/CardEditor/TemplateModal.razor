@implements IDisposable
@using Blazored.Modal;
@using TheCardEditor.Shared;
@using Toolbelt.Blazor.HotKeys2;
@using System.Text.Json.Nodes;
@using System.Text.Json;
<div style="height:80vh;width:90vw;overflow:scroll;display:flex" class="col-md-12">
    <div class="no-canvas-interactions">
        <canvas style="border:1px solid #000000" id="@CanvasId" width="@(Width)px" height="@(Height)px"></canvas>
    </div>
    <div style="width: calc(85vw - @(Width)px)">
        <FloatingInput Label="Filter" InputChanged="@(v=>{_templateSearchValue=v;})"></FloatingInput>
        <div style="height:90%;overflow-y:scroll">
            @foreach (var template in _templateNamesById.Where(t => t.Value.Contains(_templateSearchValue)))
            {
                <div @onclick="async ()=>await TemplateSelected(template.Key)"
                     class="p-1 m-0 alert @(_selectedTemplate==template.Key?"alert-info":"")">
                    @template.Value
                </div>
            }
        </div>
    </div>
</div>
<div class="col-md-12 d-flex flex-row">
    <Button disabled="@(_selectedTemplate==null)" class="btn btn-danger col-md-2 m-2" OnClickAsync="@(async ()=>await DeleteTemplate())">Delete Template</Button>
    <div style="flex:auto"></div>
    <Button class="btn btn-dark col-md-2 m-2" OnClickAsync="@(async()=>await Close())">Use no Template</Button>
    <Button disabled="@(_selectedTemplate==null)" class="btn btn-primary col-md-2 m-2" OnClickAsync="@(async()=>await UseTemplateForNewCard())">Use Template for new Card</Button>
</div>
<style>
    .no-canvas-interactions {
        cursor: not-allowed;
        pointer-events: none;
    }

    .hovery:hover {
        background-color: palevioletred;
    }
</style>

